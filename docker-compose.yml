version: '3.3'

services:
  sprinters-postgres:
    image: postgres
    container_name: sprinters-postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: Geheim_101
      POSTGRES_USER: postgres
    networks:
      - kantilever-sprinters
#EVENTBUS
  kantilever-sprinters-eventbus:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=Kantilever
      - RABBITMQ_DEFAULT_PASS=Kant1lever
    networks:
      - kantilever-sprinters
    ports:
      - 5672:5672
      - 15672:15672
#KLANTBEHEER
  sprinters-klantbeheer:
    image: sprinters-klantbeheer-i
    container_name: sprinters-klantbeheer
    build:
      context: ./Sprinters.KlantBeheer/Sprinters.KlantBeheer
      dockerfile: Dockerfile
    environment:
      SPRINTERDB: 'Host=sprinters-postgres;Database=KlantBeheerDb;Username=postgres;Password=Geheim_101'
      EXCHANGENAME: KantileverBus
      HOSTNAME: kantilever-sprinters-eventbus
      PASSWORD: Kant1lever
      USERNAME: Kantilever
      PORT: 5672
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kantilever-sprinters-eventbus:5672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - kantilever-sprinters-eventbus
    networks:
      - kantilever-sprinters
#WEBSHOP FRONT-END
  sprinters-webshop-angular:
    image: sprinters-webshop-angular-i
    container_name: sprinters-webshop-angular-c
    build:
      context: ./Sprinters.Webshop.Angular
      dockerfile: Dockerfile
    ports:
      - "9001:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://sprinters-webshop-bff:80/api/artikelen"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - sprinters-webshop-bff
    networks:
      - kantilever-sprinters
#MAGAZIJN FRONT-END
  sprinters-magazijn-angular:
    image: sprinters-magazijn-angular-i
    container_name: sprinters-magazijn-angular-c
    build:
      context: ./Sprinters.Magazijn.Angular
      dockerfile: Dockerfile
    ports:
      - "9003:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://sprinters-webshop-bff:80/api/bestellingen"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - sprinters-webshop-bff
    networks:
      - kantilever-sprinters
#WEBSHOP BFF
  sprinters-webshop-bff:
    image: sprinters-webshop-bff-i
    container_name: sprinters-webshop-bff
    build:
      context: ./Sprinters.Webshop.BFF/Sprinters.Webshop.BFF
      dockerfile: Dockerfile
    environment:
      SPRINTERDB: 'Host=sprinters-postgres;Database=KlantBFFDb;Username=postgres;Password=Geheim_101'
      EXCHANGENAME: KantileverBus
      HOSTNAME: kantilever-sprinters-eventbus
      PASSWORD: Kant1lever
      USERNAME: Kantilever
      PORT: 5672
      JWTKEY: SuperBelangrijkeSleutel101#
      ISSUER: kantilever.nl
    ports:
      - "9000:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kantilever-sprinters-eventbus:5672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - kantilever-sprinters-eventbus
    networks:
      - kantilever-sprinters
#Authenticatie
  sprinters-authenticatie:
    image: sprinters-authenticatie-i
    container_name: sprinters-authenticatie-c
    build:
      context: ./Sprinters.Authenticatie/Sprinters.Authenticatie
      dockerfile: Dockerfile
    environment:
      SPRINTERDB: 'Host=sprinters-postgres;Database=AuthenticatieDb;Username=postgres;Password=Geheim_101'
      EXCHANGENAME: KantileverBus
      HOSTNAME: kantilever-sprinters-eventbus
      PASSWORD: Kant1lever
      USERNAME: Kantilever
      PORT: 5672
      SALESEMAIL: sales@kantilever.nl
      SALESPASSWORD: wachtwoordSales123! # oeps
      MAGAZIJNEMAIL: magazijn@kantilever.nl
      MAGAZIJNPASSWORD: wachtwoordMagazijn123!
      JWTKEY: SuperBelangrijkeSleutel101#
      ISSUER: kantilever.nl
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kantilever-sprinters-eventbus:5672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - kantilever-sprinters-eventbus
    networks:
      - kantilever-sprinters
#BESTELLINGBEHEER
  sprinters-bestellingbeheer:
    image: sprinters-bestellingbeheer-i
    container_name: sprinters-bestellingbeheer
    build:
      context: ./Sprinters.BestellingBeheer/Sprinters.BestellingBeheer
      dockerfile: Dockerfile
    environment:
      SPRINTERDB: 'Host=sprinters-postgres;Database=BestellingBeheerDb;Username=postgres;Password=Geheim_101'
      EXCHANGENAME: KantileverBus
      HOSTNAME: kantilever-sprinters-eventbus
      PASSWORD: Kant1lever
      USERNAME: Kantilever
      PORT: 5672
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kantilever-sprinters-eventbus:5672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - kantilever-sprinters-eventbus
    networks:
      - kantilever-sprinters
#Kantilever:
  sql-sprinters:
    image: microsoft/mssql-server-linux:2017-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Geheim_101
    networks:
      - kantilever-sprinters

  kantilever-sprinters-auditlog:
    image: dotnetminor.azurecr.io/kantilever-auditlog:latest
    environment:
      - AuditLogDb=Server=sql-sprinters,1433;Database=AuditLogDB;User ID=sa;Password=Geheim_101
      - VIRTUAL_HOST=kantilever-sprinters-auditlog.netminor.infosupport.net
      - VIRTUAL_PORT=80
      - eventbus-exchangename=KantileverBus
      - eventbus-hostname=kantilever-sprinters-eventbus
      - eventbus-username=Kantilever
      - eventbus-password=Kant1lever
      - startup-delay-in-seconds=80
    volumes:
      - type: "volume"
        target: /app/data
        #source: /dir/to/map/on/docker/host/machine
    networks:
      # - proxy
      - kantilever-sprinters
    ports:
     - 8082:80 

  kantilever-sprinters-magazijnservice:
    image: dotnetminor.azurecr.io/kantilever-magazijn-service:latest
    environment:
      - MagazijnDb=Server=sql-sprinters,1433;Database=MagazijnDb;User ID=sa;Password=Geheim_101
      - VIRTUAL_HOST=kantilever-sprinters-magazijnservice.netminor.infosupport.net
      - VIRTUAL_PORT=80
      - eventbus-exchangename=KantileverBus
      - eventbus-hostname=kantilever-sprinters-eventbus
      - eventbus-username=Kantilever
      - eventbus-password=Kant1lever
      - startup-delay-in-seconds=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kantilever-sprinters-eventbus:5672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - kantilever-sprinters-eventbus
    networks:
      # - proxy
      - kantilever-sprinters
    ports:
     - 8081:80

  kantilever-sprinters-magazijnfrontend:
    image: dotnetminor.azurecr.io/kantilever-magazijn-frontend:latest
    environment:
      - MagazijnDb=Server=sql-sprinters,1433;Database=MagazijnViewDb;User ID=sa;Password=Geheim_101
      - VIRTUAL_HOST=kantilever-sprinters-magazijnfrontend.netminor.infosupport.net
      - VIRTUAL_PORT=80
      - eventbus-exchangename=KantileverBus
      - eventbus-hostname=kantilever-sprinters-eventbus
      - eventbus-username=Kantilever
      - eventbus-password=Kant1lever
      - startup-delay-in-seconds=80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kantilever-sprinters-eventbus:5672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure
    depends_on:
      - kantilever-sprinters-eventbus
    networks:
      - kantilever-sprinters
      # - proxy
    ports:
     - 8080:80
networks:
  # proxy:
  #   external:
  #     name: proxy_network
  kantilever-sprinters:
    driver: bridge